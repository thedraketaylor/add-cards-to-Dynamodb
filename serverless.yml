# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: add-cards-dynamo
# app and org for use with dashboard.serverless.com
#app: your-app-name
#org: your-org-name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
frameworkVersion: '2'

provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: 20201221
  stage: dev
  region: us-east-1
  deploymentBucket:
    name: cloudcards-${self:provider.stage}
    serverSideEncryption: AES256

plugins:
  - serverless-deployment-bucket

package:
  include:
    - ./handler.py
  exclude:
    - ./**

functions:
  SQS2Dynamo:
    handler: handler.add_cards_to_dynamodb
    tracing: true
    events:
      - sns:
          arn:
            Fn::Join:
              - ':'
              - - 'arn:aws:sns'
                - Ref: 'AWS::Region'
                - Ref: 'AWS::AccountId'
                - 'num_cards'
          topicName: "num_cards"
    role: IAMRole
    memorySize: 128
    timeout: 300
    environment: # Function level environment variables
      queuename:  drakeworld-flashcards-${self:provider.stage}
      tablename:  drakeworld-flashcards-${self:provider.stage}
      waittimesecs: 5 # Timeout must be set longer than this value
      visibilitytimeout: 25
      max_messages: 10 # Max number of messages

# you can add CloudFormation resource templates here
resources:
 Resources:
   IAMRole:
     Type: AWS::IAM::Role
     Properties:
       Path: /lambda/custom/
       RoleName: flashcardsAddCardsDynamo-${self:provider.stage}
       AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
       Policies:
          - PolicyName: flashcardsAddCardsDynamo-${self:provider.stage}
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow # note that these rights are given in the default policy and are required if you want logs out of your lambda(s)
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - "Fn::Join":
                        - ":"
                        - - "arn:aws:logs"
                          - Ref: "AWS::Region"
                          - Ref: "AWS::AccountId"
                          - "log-group:/aws/lambda/*:*:*"
                - Effect: Allow
                  Action:
                    - xray:PutTelemetryRecords
                    - xray:PutTraceSegments
                  Resource:
                    - "*"
                - Effect: Allow
                  Action:
                    - sqs:DeleteMessage
                    - sqs:GetQueueAttributes
                    - sqs:ReceiveMessage
                    - sqs:GetQueueUrl
                  Resource:
                    - "Fn::Join":
                        - ":"
                        - - "arn:aws:sqs"
                          - Ref: "AWS::Region"
                          - Ref: "AWS::AccountId"
                          - "drakeworld-flashcards-${self:provider.stage}"
                - Effect: Allow
                  Action:
                    - dynamodb:PutItem
                    - dynamodb:ConditionCheckItem
                  Resource:
                    - "Fn::Join":
                        - ":"
                        - - "arn:aws:dynamodb"
                          - Ref: "AWS::Region"
                          - Ref: "AWS::AccountId"
                          - "table/drakeworld-flashcards-${self:provider.stage}"
                - Effect: Allow
                  Action:
                    - sns:Subscribe
                  Resource:
                    - "Fn::Join":
                        - ":"
                        - - "arn:aws:sns"
                          - Ref: "AWS::Region"
                          - Ref: "AWS::AccountId"
                          - "num_cards"
